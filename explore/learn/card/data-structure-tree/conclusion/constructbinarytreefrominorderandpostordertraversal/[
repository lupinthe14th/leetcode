package constructbinarytreefrominorderandpostordertraversal

type TreeNode struct {
	Val   int
	Left  *TreeNode
	Right *TreeNode
}

func buildTree(inorder []int, postorder []int) *TreeNode {
	return &TreeNode{}
}

func buildInorder(in []int) *TreeNode {
	root := &TreeNode{}
	var inorder func(root *TreeNode, n int) *TreeNode

	inorder = func(root *TreeNode, n int) *TreeNode {
		if root.Left == nil {
			root.Left = n
		}
	}
	for _, v := range in {
	}
	return &TreeNode{}
}
